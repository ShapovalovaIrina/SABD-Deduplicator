Современный тренд в области хранения данных направлен на создание 
распределенных хранилищ, которые могут быть хорошо масштабируемы, 
обладают высокой надежностью, безопасностью, производительностью и 
позволяют хранить и обрабатывать колоссальный объем входных данных. 
Такие распределенные хранилища размещают в облачной инфраструктуре, 
которая в свою очередь обладает огромным потенциалом для создания и 
использования различных сервисов обслуживания данных.
Одним из важных аспектов хранения является минимизация стоимости 
хранения данных. Для неструктурированных данных или данных, которые 
представляются в виде последовательности байт на диске, для оптимального 
хранения можно использовать подходы дедупликации. В данной работе 
предлагается создать прототип решения по дедупликации данных на 
локальном хранилище. Под дедупликацией данных понимается физическое 
хранение на носителе информации (жестком диске) только уникальных блоков 
данных.
Любой алгоритм дедупликации основан на вычислении hash-функции 
для блоков входного потока данных. На основе этой hash-функции делается 
решение, существует ли уже в системе входной блок данных или нет. Если 
блок не существует, то он записывается в хранилище, а если существует, то он 
заменяется ссылкой на уже существующий в хранилище.
Для того, чтобы сделать вывод о том, существует ли в системе блок 
данных с заданным hash-значением, необходимо хранить таблицу hashзначений и ссылку в хранилище на соответствующий блок данных. 
Hash-таблица в общем случае может содержать две колонки: "Hashзначение", "Ссылка на блок данных". Но стоит иметь ввиду, что зачастую 
приходится хранить дополнительную информацию, необходимую для 
дедупликации и сборщика мусора, например: количество ссылок на блок 
данных.
Современный тренд в области хранения данных направлен на создание
распределенных хранилищ, которые могут быть хорошо масштабируемы,
обладают высокой надежностью, безопасностью, производительностью и
позволяют хранить и обрабатывать колоссальный объем входных данных.
Такие распределенные хранилища размещают в облачной инфраструктуре,
которая в свою очередь обладает огромным потенциалом для создания и
использования различных сервисов обслуживания данных.
Одним из важных аспектов хранения является минимизация стоимости
хранения данных. Для неструктурированных данных или данных, которые
представляются в виде последовательности байт на диске, для оптимального
хранения можно использовать подходы дедупликации. В данной работе
предлагается создать прототип решения по дедупликации данных на
локальном хранилище. Под дедупликацией данных понимается физическое
хранение на носителе информации (жестком диске) только уникальных блоков
данных.
Любой алгоритм дедупликации основан на вычислении hash-функции
для блоков входного потока данных. На основе этой hash-функции делается
решение, существует ли уже в системе входной блок данных или нет. Если
блок не существует, то он записывается в хранилище, а если существует, то он
заменяется ссылкой на уже существующий в хранилище.
Для того, чтобы сделать вывод о том, существует ли в системе блок
данных с заданным hash-значением, необходимо хранить таблицу hashзначений и ссылку в хранилище на соответствующий блок данных.
Hash-таблица в общем случае может содержать две колонки: "Hashзначение", "Ссылка на блок данных". Но стоит иметь ввиду, что зачастую
приходится хранить дополнительную информацию, необходимую для
дедупликации и сборщика мусора, например: количество ссылок на блок
данных.

